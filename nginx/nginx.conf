user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;
	client_max_body_size 50m;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;
	log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name  to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
	proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:60m max_size=1G;
	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-available/*;
	
	##
	# nginx-module-vts
	##
	#vhost_traffic_status_zone;
	#vhost_traffic_status_filter_by_host on;



	##
	# nginx-lua-prometheus
	##
	lua_shared_dict prometheus_metrics 10M;
	lua_package_path "/etc/nginx/lua/prometheus.lua";
	init_by_lua '
	  prometheus = require("prometheus").init("prometheus_metrics")
	  metric_requests = prometheus:counter(
	    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
	  metric_latency = prometheus:histogram(
	    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
	  metric_connections = prometheus:gauge(
	    "nginx_http_connections", "Number of HTTP connections", {"state"})
	';
	log_by_lua '
	  metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
	  metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
	';
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
